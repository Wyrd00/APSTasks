var cov_2crsvobmzs=function(){var path="/Users/macbook/Desktop/week2/Team Project/APSTasks/logic.js",hash="80de9966d5fa36227572cf13e98467e84f2fc264",global=new Function('return this')(),gcv="__coverage__",coverageData={path:"/Users/macbook/Desktop/week2/Team Project/APSTasks/logic.js",statementMap:{"0":{start:{line:5,column:20},end:{line:54,column:1}},"1":{start:{line:9,column:20},end:{line:9,column:21}},"2":{start:{line:12,column:6},end:{line:12,column:30}},"3":{start:{line:15,column:4},end:{line:15,column:28}},"4":{start:{line:18,column:4},end:{line:18,column:44}},"5":{start:{line:19,column:4},end:{line:19,column:25}},"6":{start:{line:20,column:22},end:{line:20,column:43}},"7":{start:{line:21,column:4},end:{line:21,column:23}},"8":{start:{line:28,column:20},end:{line:30,column:6}},"9":{start:{line:29,column:6},end:{line:29,column:38}},"10":{start:{line:31,column:4},end:{line:31,column:21}},"11":{start:{line:37,column:20},end:{line:41,column:6}},"12":{start:{line:38,column:6},end:{line:40,column:7}},"13":{start:{line:39,column:8},end:{line:39,column:54}},"14":{start:{line:42,column:4},end:{line:42,column:21}},"15":{start:{line:56,column:0},end:{line:56,column:30}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:8,column:15},end:{line:8,column:16}},loc:{start:{line:8,column:26},end:{line:16,column:3}},line:8},"1":{name:"incrementCounter",decl:{start:{line:11,column:13},end:{line:11,column:29}},loc:{start:{line:11,column:32},end:{line:13,column:5}},line:11},"2":{name:"(anonymous_2)",decl:{start:{line:17,column:11},end:{line:17,column:12}},loc:{start:{line:17,column:36},end:{line:26,column:3}},line:17},"3":{name:"(anonymous_3)",decl:{start:{line:27,column:14},end:{line:27,column:15}},loc:{start:{line:27,column:42},end:{line:35,column:3}},line:27},"4":{name:"(anonymous_4)",decl:{start:{line:28,column:33},end:{line:28,column:34}},loc:{start:{line:28,column:47},end:{line:30,column:5}},line:28},"5":{name:"(anonymous_5)",decl:{start:{line:36,column:12},end:{line:36,column:13}},loc:{start:{line:36,column:38},end:{line:47,column:3}},line:36},"6":{name:"(anonymous_6)",decl:{start:{line:37,column:30},end:{line:37,column:31}},loc:{start:{line:37,column:44},end:{line:41,column:5}},line:37},"7":{name:"(anonymous_7)",decl:{start:{line:48,column:13},end:{line:48,column:14}},loc:{start:{line:48,column:43},end:{line:53,column:3}},line:48}},branchMap:{"0":{loc:{start:{line:38,column:6},end:{line:40,column:7}},type:"if",locations:[{start:{line:38,column:6},end:{line:40,column:7}},{start:{line:38,column:6},end:{line:40,column:7}}],line:38},"1":{loc:{start:{line:39,column:28},end:{line:39,column:52}},type:"cond-expr",locations:[{start:{line:39,column:40},end:{line:39,column:45}},{start:{line:39,column:48},end:{line:39,column:52}}],line:39}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},b:{"0":[0,0],"1":[0,0]},_coverageSchema:"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c"},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();// Part 1. Fill in any missing parts of the todoFunction object!
// you can access these on todo.todoFunctions
// For part one we expect you to use tdd
var todoFunctions=(++cov_2crsvobmzs.s[0],{// todoFunctions.generateId() will give you a unique id
// You do not need to understand the implementation of this function.
generateId:function(){++cov_2crsvobmzs.f[0];var idCounter=(++cov_2crsvobmzs.s[1],0);function incrementCounter(){++cov_2crsvobmzs.f[1];++cov_2crsvobmzs.s[2];return idCounter+=1;}++cov_2crsvobmzs.s[3];return incrementCounter;}(),addTodo:function(todos,newTodo){++cov_2crsvobmzs.f[2];++cov_2crsvobmzs.s[4];newTodo.id=todoFunctions.generateId();++cov_2crsvobmzs.s[5];newTodo.done=false;var updatedTodo=(++cov_2crsvobmzs.s[6],todos.concat(newTodo));++cov_2crsvobmzs.s[7];return updatedTodo;// should leave the input argument todos unchanged
// returns a new array, it should contain todos with the newTodo added to the end.
// add an id to the newTodo. You can use the generateId function to create an id.
// hint: array.concat
},deleteTodo:function(todos,idToDelete){++cov_2crsvobmzs.f[3];var finalTodo=(++cov_2crsvobmzs.s[8],todos.filter(function(elem){++cov_2crsvobmzs.f[4];++cov_2crsvobmzs.s[9];return elem.id!==idToDelete;}));++cov_2crsvobmzs.s[10];return finalTodo;// should leave the input argument todos unchanged
// return a new array, this should not contain any todo with an id of idToDelete
// hint: array.filter
},markTodo:function(todos,idToMark){++cov_2crsvobmzs.f[5];var finalTodo=(++cov_2crsvobmzs.s[11],todos.map(function(elem){++cov_2crsvobmzs.f[6];++cov_2crsvobmzs.s[12];if(elem.id===idToMark){++cov_2crsvobmzs.b[0][0];++cov_2crsvobmzs.s[13];return elem.done=elem.done?(++cov_2crsvobmzs.b[1][0],false):(++cov_2crsvobmzs.b[1][1],true);}else{++cov_2crsvobmzs.b[0][1];}}));++cov_2crsvobmzs.s[14];return finalTodo;// should leave the input argument todos unchanged
// in the new todo array, all elements will remain unchanged except the one with id: idToMark
// this element will have its done value toggled
// hint: array.map
},sortTodos:function(todos,sortFunction){// stretch goal! Do this last
// should leave the input arguement todos unchanged
// sortFunction will have same signature as the sort function in array.sort
// hint: array.slice, array.sort
++cov_2crsvobmzs.f[7];}});++cov_2crsvobmzs.s[15];module.exports=todoFunctions;