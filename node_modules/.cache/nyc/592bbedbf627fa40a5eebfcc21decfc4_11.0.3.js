var cov_2crsvobmzs=function(){var path="/Users/macbook/Desktop/week2/Team Project/APSTasks/logic.js",hash="fc4ed8f01d7a48ce2be849d7ce03eabbb0aca729",global=new Function('return this')(),gcv="__coverage__",coverageData={path:"/Users/macbook/Desktop/week2/Team Project/APSTasks/logic.js",statementMap:{"0":{start:{line:7,column:20},end:{line:57,column:1}},"1":{start:{line:11,column:20},end:{line:11,column:21}},"2":{start:{line:14,column:6},end:{line:14,column:30}},"3":{start:{line:17,column:4},end:{line:17,column:28}},"4":{start:{line:22,column:4},end:{line:22,column:44}},"5":{start:{line:23,column:22},end:{line:23,column:43}},"6":{start:{line:24,column:4},end:{line:24,column:23}},"7":{start:{line:31,column:4},end:{line:35,column:7}},"8":{start:{line:32,column:6},end:{line:34,column:7}},"9":{start:{line:33,column:10},end:{line:33,column:32}},"10":{start:{line:37,column:4},end:{line:37,column:17}},"11":{start:{line:59,column:0},end:{line:59,column:30}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:10,column:15},end:{line:10,column:16}},loc:{start:{line:10,column:26},end:{line:18,column:3}},line:10},"1":{name:"incrementCounter",decl:{start:{line:13,column:13},end:{line:13,column:29}},loc:{start:{line:13,column:32},end:{line:15,column:5}},line:13},"2":{name:"(anonymous_2)",decl:{start:{line:20,column:11},end:{line:20,column:12}},loc:{start:{line:20,column:36},end:{line:29,column:3}},line:20},"3":{name:"(anonymous_3)",decl:{start:{line:30,column:14},end:{line:30,column:15}},loc:{start:{line:30,column:42},end:{line:44,column:3}},line:30},"4":{name:"(anonymous_4)",decl:{start:{line:31,column:18},end:{line:31,column:19}},loc:{start:{line:31,column:32},end:{line:35,column:5}},line:31},"5":{name:"(anonymous_5)",decl:{start:{line:45,column:12},end:{line:45,column:13}},loc:{start:{line:45,column:38},end:{line:50,column:3}},line:45},"6":{name:"(anonymous_6)",decl:{start:{line:51,column:13},end:{line:51,column:14}},loc:{start:{line:51,column:43},end:{line:56,column:3}},line:51}},branchMap:{"0":{loc:{start:{line:32,column:6},end:{line:34,column:7}},type:"if",locations:[{start:{line:32,column:6},end:{line:34,column:7}},{start:{line:32,column:6},end:{line:34,column:7}}],line:32}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},b:{"0":[0,0]},_coverageSchema:"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c"},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();// Part 1. Fill in any missing parts of the todoFunction object!
// you can access these on todo.todoFunctions
// For part one we expect you to use tdd
var todoFunctions=(++cov_2crsvobmzs.s[0],{// todoFunctions.generateId() will give you a unique id
// You do not need to understand the implementation of this function.
generateId:function(){++cov_2crsvobmzs.f[0];var idCounter=(++cov_2crsvobmzs.s[1],0);function incrementCounter(){++cov_2crsvobmzs.f[1];++cov_2crsvobmzs.s[2];return idCounter+=1;}++cov_2crsvobmzs.s[3];return incrementCounter;}(),addTodo:function(todos,newTodo){++cov_2crsvobmzs.f[2];++cov_2crsvobmzs.s[4];// var toDo = [];
newTodo.id=todoFunctions.generateId();var updatedTodo=(++cov_2crsvobmzs.s[5],todos.concat(newTodo));++cov_2crsvobmzs.s[6];return updatedTodo;// should leave the input argument todos unchanged
// returns a new array, it should contain todos with the newTodo added to the end.
// add an id to the newTodo. You can use the generateId function to create an id.
// hint: array.concat
},deleteTodo:function(todos,idToDelete){++cov_2crsvobmzs.f[3];++cov_2crsvobmzs.s[7];todos.forEach(function(obj){++cov_2crsvobmzs.f[4];++cov_2crsvobmzs.s[8];if("id"in todos[i]===idToDelete){++cov_2crsvobmzs.b[0][0];++cov_2crsvobmzs.s[9];todos[i].slice([i],1);}else{++cov_2crsvobmzs.b[0][1];}});//    var finalTodo = todos.pop();
++cov_2crsvobmzs.s[10];return todos;// filter(function(){
//   return
// })
// should leave the input argument todos unchanged
// return a new array, this should not contain any todo with an id of idToDelete
// hint: array.filter
},markTodo:function(todos,idToMark){// should leave the input argument todos unchanged
// in the new todo array, all elements will remain unchanged except the one with id: idToMark
// this element will have its done value toggled
// hint: array.map
++cov_2crsvobmzs.f[5];},sortTodos:function(todos,sortFunction){// stretch goal! Do this last
// should leave the input arguement todos unchanged
// sortFunction will have same signature as the sort function in array.sort
// hint: array.slice, array.sort
++cov_2crsvobmzs.f[6];}});++cov_2crsvobmzs.s[11];module.exports=todoFunctions;